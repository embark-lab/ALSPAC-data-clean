---
title: "ALSPAC_Score_2"
format: html
editor: visual
---

```{r}
library(dplyr)
library(stringr)
library(tidyr)

load('data/ALSPAC_cleaned.RData')
load('data/ALSPAC_long.RData')
load('data/ALSPAC_wide.RData')

```

```{r}

# Load Individual Scoresheets
filenames <- list.files('scoresheets/clean/Step_2') # MAKE SURE THIS IS THE CORRECT DIRECTORY NAME
filenames <- paste('scoresheets/clean/Step_2', filenames, sep = '/' )
ldf <- lapply(filenames, readxl::read_xlsx)

# List of Measure Names from the Scoresheets
measures <- list.files('scoresheets/clean/Step_2') 
measures <- gsub('.xlsx*', '', measures)

# Names the scoresheets
names(ldf) <- measures

# Cleans and saves cleaned data for each measure 

x <- vector(mode = 'list', length = (length(measures)))
names(x) <- measures

tibble_func_1 <- function(x) {
  y = tibble::as_tibble(x)
  return (y) }

cleaned_data <- purrr::map(x, tibble_func_1)

for (i in 1:length(measures)) {
cleaned <- scorekeeper::scorekeep(ALSPAC_wide, ldf[[i]])
cleaned_last <- cleaned[[max(ldf[[i]]$step)]]  
cleaned_last <- cleaned_last |> 
  filter_at(c(2:length(cleaned_last)), any_vars(!is.na(.)))
cleaned_data[[i]] <-cleaned_last
}

dx_data <- cleaned_data[[1]]

j = 2
while (j <= length(cleaned_data)) {
  dx_data <- full_join(dx_data, cleaned_data[[j]])
  j = j+1
}

BED <- ALSPAC_wide |> select(id, starts_with('binge')) 
BED <- BED |> filter_at(c(2:5), any_vars(!is.na(.)))
dx_data <- dplyr::full_join(BED, dx_data)


```

Clean `dx_data` and add heirarchy diagnoses

```{r}
dx_data <- dx_data |>
  pivot_longer(cols = matches("\\."),
               names_sep = "\\.",
               names_to = c(".value", "assess_agemos")) 

restrict_vars <- c('AN', 'AAN', 'sub_restrict')

dx_vars <- c('AN', 'bn_present', 'binge_criteria_met', 'purge_disorder_present', 
             'AAN', 'sub_restrict', 'sub_bn_present', 'binge_sub_criteria_met')


# Step 1: Create the ed_dx column without labeling.
dx_data <- dx_data %>%
  mutate(
    restrict_only = case_when(
      AN == 1 ~ 1, 
      AAN == 1 ~ 2, 
      sub_restrict == 1 ~ 3,
      sub_restrict == 0 & AAN == 0 & AN == 0 ~ 0
    ),
    ed_dx = (
      case_when(
        AN == 1 ~ 1, 
        bn_present == 1 ~ 2, 
        binge_criteria_met == 1 ~ 3, 
        purge_disorder_present == 1 ~ 4,
        AAN == 1 ~ 5, 
        sub_restrict == 1 ~ 6,
        sub_bn_present == 1 ~ 7,
        binge_sub_criteria_met == 1 ~ 8,
        rowSums(select(dx_data, all_of(dx_vars))) == 0 ~ 0
      )
    )
  )
other_ed_codes<- c(2,3,4,6,7)

dx_data <- dx_data |> 
  mutate(
    aan = ifelse(as.integer(ed_dx) == 5, 1, ifelse(is.na(ed_dx), NA, 0)),
    an = ifelse(as.integer(ed_dx) == 1, 1, ifelse(is.na(ed_dx), NA, 0)),
    sub_restrict = ifelse(as.integer(ed_dx) == 6, 1, ifelse(is.na(ed_dx), NA, 0)),
    other_ed = ifelse(as.integer(ed_dx) %in% other_ed_codes, 1, ifelse(is.na(ed_dx), NA, 0)),
    no_ed = ifelse(as.integer(ed_dx) == 0, 1, ifelse(is.na(ed_dx), NA, 0))
  )

restrict_dx_vars <- c('an', 'aan', 'sub_restrict', 'other_ed', 'no_ed')

dx_data <- dx_data |> 
  mutate(
    ed_restrict_dx = case_when (
      an == 1 ~ 1, 
      aan == 1 ~ 2, 
      sub_restrict == 1 ~ 3, 
      other_ed == 1 ~ 4,
      no_ed == 1 ~ 0
    )
  )

# Define a factor with desired levels and labels
dx_data$ed_dx <- factor(
  dx_data$ed_dx, 
  levels = 0:8,
  labels = c(
    "No Diagnosis",
    "Anorexia Nervosa", 
    "Bulimia Nervosa", 
    "Binge Eating Disorder", 
    "Purge Disorder",
    "Atypical Anorexia Nervosa", 
    "Subthreshold Restriction",
    "Subthreshold Bulimia Nervosa",
    "Subthreshold Binge Eating Disorder"
  )
)

dx_data$ed_restrict_dx <- factor(
  dx_data$ed_restrict_dx, 
  levels = 0:4,
  labels = c(
    "No ED",
    "AN", 
    "Atypical AN",
    "Sub Restriction",
    "Other ED"
  )
)

ALSPAC_cleaned$ED_Diagnoses <- dx_data
save(ALSPAC_cleaned, file = 'data/ALSPAC_Cleaned.RData')

cleaned_data <- ALSPAC_cleaned
demographics <- cleaned_data$Demographics
demographics_index <- which(names(cleaned_data) == "Demographics")
cleaned_1 <- c(cleaned_data[-demographics_index])

long_data <- cleaned_1[[1]]
i = 2
while (i <= length(cleaned_1)) {
  long_data <- full_join(long_data, cleaned_1[[i]])
  i = i+1
}

long_data <- left_join(long_data, demographics)

cols <- colnames(long_data)
demo_cols <- colnames(demographics)
varying_cols <- cols[!cols %in% demo_cols]

wide_data <- long_data %>%
  pivot_wider(
    id_cols = demo_cols,
    values_from = varying_cols,
    names_from = assess_agemos,
    names_glue = "{.value}.{assess_agemos}"
  ) |> 
  janitor::remove_empty("cols")

# Long Dataframe
ALSPAC_long <- long_data
save(ALSPAC_long, file = 'data/ALSPAC_long.RData') 

# Wide Dataframe
ALSPAC_wide <- wide_data
save(ALSPAC_wide, file = 'data/ALSPAC_wide.RData') 



```
